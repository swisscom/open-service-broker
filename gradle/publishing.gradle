/*
 * Copyright (c) 2019 Swisscom (Switzerland) Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

def isReleaseVersion = !version.endsWith('-SNAPSHOT')


/**
 * Open service broker publication in maven central.
 *
 * ONLY OSB DEVELOPERS
 * For publishing you have to:
 * - Decrypt the secring.gpg.enc
 * - Provide the following properties in your ~/.gradle/gradle.properties:
 *  // For compatibility with scripts
 *  ossrhUsername=<oss.sonatype.org username>
 *  ossrhPassword=<oss.sonatype.org password>
 *
 *  // For compatibility with bintray plugin
 *  bintrayUser=<bintray username>
 *  bintrayPassword=<bintray apikey obtained from ui>
 *
 *  // For signing artifacts with deencrypted secring.gpg.enc
 *  signingKeyId=<signing key id>
 *  signingPassword=<signing password>
 *  signingSecretKeyRingFile=<path tho the deencrypted secring.gpg.enc>
 *      
 *  References:
 *  - https://reflectoring.io/publish-snapshots-with-gradle/
 */

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

task testJar(type: Jar) {
    from sourceSets.test.output
    archiveClassifier = 'test'
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = project.name
            groupId = group

            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifact testJar

            pom {
                name = project.name
                description = 'Swisscom\'s Open Service Broker API implementation'

                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.html'
                    }
                }
                developers {
                    developer {
                        id = 'philipp.meier'
                        name = 'Philipp Meier'
                        organization = 'Swisscom (Schweiz) AG'
                        organizationUrl = 'https://www.swisscom.ch'
                    }
                    developer {
                        id = 'simon.peter'
                        name = 'Simon Peter'
                        organization = 'Swisscom (Schweiz) AG'
                        organizationUrl = 'https://www.swisscom.ch'
                    }
                    developer {
                        id = 'christoph.seiler'
                        name = 'Christoph Seiler'
                        organization = 'Swisscom (Schweiz) AG'
                        organizationUrl = 'https://www.swisscom.ch'
                    }
                    developer {
                        id = 'ibon.urrutia'
                        name = 'Ibon Urrutia'
                        organization = 'Swisscom (Schweiz) AG'
                        organizationUrl = 'https://www.swisscom.ch'
                    }
                }
            }


        }
    }

}

ext.'signing.keyId' = project.hasProperty('signingKeyId') ? project.property('signingKeyId') :
                      System.getenv('SIGNING_KEY_ID')
ext.'signing.password' = project.hasProperty('signingPassword') ? project.property('signingPassword') :
                         System.getenv('SIGNING_PASSWORD')
ext.'signing.secretKeyRingFile' = project.hasProperty('signingSecretKeyRingFile') ? project.property(
        'signingSecretKeyRingFile') : "\$(pwd)/local.secring.gpg"

signing {
    required {isReleaseVersion}
    sign publishing.publications.maven
}



